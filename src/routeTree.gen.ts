/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SobreImport } from './routes/sobre'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedProdutosIndexImport } from './routes/_authenticated/produtos/index'
import { Route as AuthenticatedProdutosNovoImport } from './routes/_authenticated/produtos/novo'
import { Route as AuthenticatedProdutosIdEditarImport } from './routes/_authenticated/produtos/$id.editar'

// Create/Update Routes

const SobreRoute = SobreImport.update({
  id: '/sobre',
  path: '/sobre',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedProdutosIndexRoute = AuthenticatedProdutosIndexImport.update(
  {
    id: '/produtos/',
    path: '/produtos/',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

const AuthenticatedProdutosNovoRoute = AuthenticatedProdutosNovoImport.update({
  id: '/produtos/novo',
  path: '/produtos/novo',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedProdutosIdEditarRoute =
  AuthenticatedProdutosIdEditarImport.update({
    id: '/produtos/$id/editar',
    path: '/produtos/$id/editar',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/sobre': {
      id: '/sobre'
      path: '/sobre'
      fullPath: '/sobre'
      preLoaderRoute: typeof SobreImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/produtos/novo': {
      id: '/_authenticated/produtos/novo'
      path: '/produtos/novo'
      fullPath: '/produtos/novo'
      preLoaderRoute: typeof AuthenticatedProdutosNovoImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/produtos/': {
      id: '/_authenticated/produtos/'
      path: '/produtos'
      fullPath: '/produtos'
      preLoaderRoute: typeof AuthenticatedProdutosIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/produtos/$id/editar': {
      id: '/_authenticated/produtos/$id/editar'
      path: '/produtos/$id/editar'
      fullPath: '/produtos/$id/editar'
      preLoaderRoute: typeof AuthenticatedProdutosIdEditarImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedProdutosNovoRoute: typeof AuthenticatedProdutosNovoRoute
  AuthenticatedProdutosIndexRoute: typeof AuthenticatedProdutosIndexRoute
  AuthenticatedProdutosIdEditarRoute: typeof AuthenticatedProdutosIdEditarRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedProdutosNovoRoute: AuthenticatedProdutosNovoRoute,
  AuthenticatedProdutosIndexRoute: AuthenticatedProdutosIndexRoute,
  AuthenticatedProdutosIdEditarRoute: AuthenticatedProdutosIdEditarRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/sobre': typeof SobreRoute
  '/produtos/novo': typeof AuthenticatedProdutosNovoRoute
  '/produtos': typeof AuthenticatedProdutosIndexRoute
  '/produtos/$id/editar': typeof AuthenticatedProdutosIdEditarRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/sobre': typeof SobreRoute
  '/produtos/novo': typeof AuthenticatedProdutosNovoRoute
  '/produtos': typeof AuthenticatedProdutosIndexRoute
  '/produtos/$id/editar': typeof AuthenticatedProdutosIdEditarRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/sobre': typeof SobreRoute
  '/_authenticated/produtos/novo': typeof AuthenticatedProdutosNovoRoute
  '/_authenticated/produtos/': typeof AuthenticatedProdutosIndexRoute
  '/_authenticated/produtos/$id/editar': typeof AuthenticatedProdutosIdEditarRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/sobre'
    | '/produtos/novo'
    | '/produtos'
    | '/produtos/$id/editar'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/sobre'
    | '/produtos/novo'
    | '/produtos'
    | '/produtos/$id/editar'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/login'
    | '/sobre'
    | '/_authenticated/produtos/novo'
    | '/_authenticated/produtos/'
    | '/_authenticated/produtos/$id/editar'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginRoute: typeof LoginRoute
  SobreRoute: typeof SobreRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
  SobreRoute: SobreRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/_authenticated",
        "/login",
        "/sobre"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.jsx",
      "children": [
        "/_authenticated/produtos/novo",
        "/_authenticated/produtos/",
        "/_authenticated/produtos/$id/editar"
      ]
    },
    "/login": {
      "filePath": "login.jsx"
    },
    "/sobre": {
      "filePath": "sobre.jsx"
    },
    "/_authenticated/produtos/novo": {
      "filePath": "_authenticated/produtos/novo.jsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/produtos/": {
      "filePath": "_authenticated/produtos/index.jsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/produtos/$id/editar": {
      "filePath": "_authenticated/produtos/$id.editar.jsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
